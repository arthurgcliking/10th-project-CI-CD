name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: > 
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -q 'GREEN'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Wait for SonarQube to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q "UP"; then
              echo "SonarQube is up and running!"
              break
            fi
            echo "Waiting for SonarQube..."
            sleep 5
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        working-directory: ./back  # Assuming your pom.xml is in back folder
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000  # Use local SonarQube instance
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar -Dsonar.projectKey=arthurgcliking_10th-project-CI-CD_a5b396ec-40f6-4ce5-9dfe-754b8971de68 -Dsonar.projectName='10th-project-CI-CD'
